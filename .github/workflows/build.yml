name: Build LED Battery Monitor Binaries

permissions:
  contents: write
  actions: read

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            arch: x64
            binary_name: led-battery-monitor-linux-x64
            description: "Universal Linux (glibc 2.35+)"
          - os: ubuntu-24.04
            platform: linux
            arch: x64
            binary_name: led-battery-monitor-ubuntu-24.04-x64
            description: "Ubuntu 24.04 LTS and derivatives"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pyserial psutil

    - name: Build binary
      run: |
        python -m PyInstaller \
          --onefile \
          --console \
          --name ${{ matrix.binary_name }} \
          --hidden-import serial \
          --hidden-import psutil \
          --hidden-import glob \
          --hidden-import subprocess \
          --hidden-import json \
          --hidden-import platform \
          --hidden-import math \
          --hidden-import time \
          --hidden-import os \
          --distpath ./dist \
          --workpath ./build \
          --specpath ./spec \
          leds.py

    - name: Test binary
      run: |
        chmod +x ./dist/${{ matrix.binary_name }}
        ls -la ./dist/
        file ./dist/${{ matrix.binary_name }}
        ldd ./dist/${{ matrix.binary_name }} || echo "Static binary or missing dependencies"

    - name: Create checksums
      run: |
        cd dist
        sha256sum ${{ matrix.binary_name }} > ${{ matrix.binary_name }}.sha256
        sha512sum ${{ matrix.binary_name }} > ${{ matrix.binary_name }}.sha512

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.binary_name }}
        path: |
          dist/${{ matrix.binary_name }}*
        retention-days: 30

  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Prepare release assets
      run: |
        mkdir -p ./release-assets
        find ./artifacts -type f -name "led-battery-monitor-*" -exec cp {} ./release-assets/ \;
        ls -la ./release-assets/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: ./release-assets/*
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## LED Battery Monitor Release
          
          ### Linux Binaries Available:
          
          #### üêß **Universal Linux Binary** (Recommended)
          - **File**: `led-battery-monitor-linux-x64`
          - **Compatible with**: 
            - Fedora 42+ (Bluefin, Aurora, Kinoite, Silverblue)
            - Ubuntu 24.04+ and derivatives (Pop!_OS, Linux Mint, etc.)
            - Debian 12+ (Bookworm and newer)
            - Arch Linux, Manjaro, EndeavourOS
            - openSUSE Tumbleweed, Leap 15.6+
            - Any modern Linux with glibc 2.35+
          
          #### üéØ **Ubuntu 24.04 LTS Specific**
          - **File**: `led-battery-monitor-ubuntu-24.04-x64`
          - **Optimized for**: Ubuntu 24.04 LTS and exact derivatives
          
          ### üöÄ Installation:
          
          ```bash
          # Download (replace with actual release URL)
          wget https://github.com/${{ github.repository }}/releases/latest/download/led-battery-monitor-linux-x64
          
          # Make executable
          chmod +x led-battery-monitor-linux-x64
          
          # Add user to dialout group for serial access
          sudo usermod -a -G dialout $USER
          
          # Run (may need to log out/in for group changes)
          ./led-battery-monitor-linux-x64
          ```
          
          ### üîß Requirements:
          - Modern Linux distribution (2024+)
          - Serial/USB ports for LED matrices
          - Python NOT required (standalone binary)
          
          ### üéµ Optional for Spotify integration:
          - Spotify desktop app
          - `dbus-send` command (usually pre-installed)
          
          ### ‚úÖ Tested on:
          - Fedora 41/42 (Bluefin, Aurora)
          - Ubuntu 24.04 LTS
          - Arch Linux (current)
          - Pop!_OS 22.04+
          
          ### üîí Checksums:
          SHA256 and SHA512 checksums provided for integrity verification.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-compatibility:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: led-battery-monitor-linux-x64
        path: ./test

    - name: Test binary compatibility
      run: |
        chmod +x ./test/led-battery-monitor-linux-x64
        echo "=== Binary Info ==="
        file ./test/led-battery-monitor-linux-x64
        echo "=== Dependencies ==="
        ldd ./test/led-battery-monitor-linux-x64 || echo "Static or self-contained binary"
        echo "=== Size ==="
        ls -lh ./test/led-battery-monitor-linux-x64
        echo "=== Test run (should exit quickly) ==="
        timeout 5 ./test/led-battery-monitor-linux-x64 || echo "Binary executed successfully"
